#############################################################################
# Makefile for building: test
# Generated by qmake (1.06c) (Qt 3.2.3) on: Sun Jul 18 20:24:02 2004
# Project:  test.pro
# Template: app
# Command: $(QMAKE) -o Makefile test.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -fomit-frame-pointer -pipe -march=i586 -mcpu=pentiumpro  -DHAVE_CONFIG_H -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -Wall -W -O2 -fomit-frame-pointer -pipe -march=i586 -mcpu=pentiumpro  -DHAVE_CONFIG_H -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib/qt3/mkspecs/default -I. -I/usr/local/include/izsound -I/usr/include/izsound -I../input -I../output -I../dsp -I../common -I../external -I../external/izsound/izsound/izsound -I../external/izsound/std-dsp/izsound -I$(QTDIR)/include -I.ui/ -I.moc/
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib `pkg-config --silence-errors --cflags --libs sndfile` -lao -lmad -lvorbis -logg -lvorbisfile -ldl -lpthread ../external/decmpa/libdecmpa.a -lqt-mt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = .obj/

####### Files

HEADERS = ../external/izsound/izsound/izsound/dspunit.h \
		../external/izsound/izsound/izsound/izsoundexception.h \
		../external/izsound/izsound/izsound/player.h \
		../external/izsound/std-dsp/izsound/bandfilter.h \
		../external/izsound/std-dsp/izsound/blackhole.h \
		../external/izsound/std-dsp/izsound/crossfader.h \
		../external/izsound/std-dsp/izsound/datapicker.h \
		../external/izsound/std-dsp/izsound/delayextrastereo.h \
		../external/izsound/std-dsp/izsound/demultiplexer.h \
		../external/izsound/std-dsp/izsound/flanger.h \
		../external/izsound/std-dsp/izsound/fragmenter.h \
		../external/izsound/std-dsp/izsound/libaooutput.h \
		../external/izsound/std-dsp/izsound/maddecoder.h \
		../external/izsound/std-dsp/izsound/oggfiledecoder.h \
		../external/izsound/std-dsp/izsound/ossoutput.h \
		../external/izsound/std-dsp/izsound/pitch.h \
		../external/izsound/std-dsp/izsound/silencer.h \
		../external/izsound/std-dsp/izsound/volume.h \
		../external/izsound/std-dsp/izsound/whitenoise.h \
		../input/decoderbase.h \
		../input/sndfiledecoder.h \
		../input/decmpadecoder.h
SOURCES = main.cpp \
		../external/izsound/izsound/dspunit.cpp \
		../external/izsound/std-dsp/bandfilter.cpp \
		../external/izsound/std-dsp/blackhole.cpp \
		../external/izsound/std-dsp/crossfader.cpp \
		../external/izsound/std-dsp/datapicker.cpp \
		../external/izsound/std-dsp/delayextrastereo.cpp \
		../external/izsound/std-dsp/demultiplexer.cpp \
		../external/izsound/std-dsp/flanger.cpp \
		../external/izsound/std-dsp/fragmenter.cpp \
		../external/izsound/std-dsp/libaooutput.cpp \
		../external/izsound/std-dsp/maddecoder.cpp \
		../external/izsound/std-dsp/oggfiledecoder.cpp \
		../external/izsound/std-dsp/ossoutput.cpp \
		../external/izsound/std-dsp/pitch.cpp \
		../external/izsound/std-dsp/silencer.cpp \
		../external/izsound/std-dsp/volume.cpp \
		../external/izsound/std-dsp/whitenoise.cpp \
		../input/decoderbase.cpp \
		../input/sndfiledecoder.cpp \
		../input/decmpadecoder.cpp
OBJECTS = .obj/main.o \
		.obj/dspunit.o \
		.obj/bandfilter.o \
		.obj/blackhole.o \
		.obj/crossfader.o \
		.obj/datapicker.o \
		.obj/delayextrastereo.o \
		.obj/demultiplexer.o \
		.obj/flanger.o \
		.obj/fragmenter.o \
		.obj/libaooutput.o \
		.obj/maddecoder.o \
		.obj/oggfiledecoder.o \
		.obj/ossoutput.o \
		.obj/pitch.o \
		.obj/silencer.o \
		.obj/volume.o \
		.obj/whitenoise.o \
		.obj/decoderbase.o \
		.obj/sndfiledecoder.o \
		.obj/decmpadecoder.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = configure.def \
		paths.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		build.definition \
		main.qbas \
		test.pro
QMAKE_TARGET = test
DESTDIR  = 
TARGET   = test

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS) $(OBJCOMP)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc ; $(MAKE) )

Makefile: test.pro  /usr/lib/qt3/mkspecs/default/qmake.conf configure.def \
		paths.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		build.definition \
		main.qbas \
		/usr/lib/qt3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile test.pro
qmake: 
	@$(QMAKE) -o Makefile test.pro

dist: 
	@mkdir -p .obj/test && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .obj/test/ && ( cd `dirname .obj/test` && $(TAR) test.tar test && $(GZIP) test.tar ) && $(MOVE) `dirname .obj/test`/test.tar.gz . && $(DEL_FILE) -r .obj/test

mocclean:

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) a.out configure.def config.h l_temp help_temp summary.log
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

.obj/main.o: main.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/main.o main.cpp

.obj/dspunit.o: ../external/izsound/izsound/dspunit.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/dspunit.o ../external/izsound/izsound/dspunit.cpp

.obj/bandfilter.o: ../external/izsound/std-dsp/bandfilter.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/bandfilter.o ../external/izsound/std-dsp/bandfilter.cpp

.obj/blackhole.o: ../external/izsound/std-dsp/blackhole.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/blackhole.o ../external/izsound/std-dsp/blackhole.cpp

.obj/crossfader.o: ../external/izsound/std-dsp/crossfader.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/crossfader.o ../external/izsound/std-dsp/crossfader.cpp

.obj/datapicker.o: ../external/izsound/std-dsp/datapicker.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/datapicker.o ../external/izsound/std-dsp/datapicker.cpp

.obj/delayextrastereo.o: ../external/izsound/std-dsp/delayextrastereo.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/delayextrastereo.o ../external/izsound/std-dsp/delayextrastereo.cpp

.obj/demultiplexer.o: ../external/izsound/std-dsp/demultiplexer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/demultiplexer.o ../external/izsound/std-dsp/demultiplexer.cpp

.obj/flanger.o: ../external/izsound/std-dsp/flanger.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/flanger.o ../external/izsound/std-dsp/flanger.cpp

.obj/fragmenter.o: ../external/izsound/std-dsp/fragmenter.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/fragmenter.o ../external/izsound/std-dsp/fragmenter.cpp

.obj/libaooutput.o: ../external/izsound/std-dsp/libaooutput.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/libaooutput.o ../external/izsound/std-dsp/libaooutput.cpp

.obj/maddecoder.o: ../external/izsound/std-dsp/maddecoder.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/maddecoder.o ../external/izsound/std-dsp/maddecoder.cpp

.obj/oggfiledecoder.o: ../external/izsound/std-dsp/oggfiledecoder.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/oggfiledecoder.o ../external/izsound/std-dsp/oggfiledecoder.cpp

.obj/ossoutput.o: ../external/izsound/std-dsp/ossoutput.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/ossoutput.o ../external/izsound/std-dsp/ossoutput.cpp

.obj/pitch.o: ../external/izsound/std-dsp/pitch.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/pitch.o ../external/izsound/std-dsp/pitch.cpp

.obj/silencer.o: ../external/izsound/std-dsp/silencer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/silencer.o ../external/izsound/std-dsp/silencer.cpp

.obj/volume.o: ../external/izsound/std-dsp/volume.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/volume.o ../external/izsound/std-dsp/volume.cpp

.obj/whitenoise.o: ../external/izsound/std-dsp/whitenoise.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/whitenoise.o ../external/izsound/std-dsp/whitenoise.cpp

.obj/decoderbase.o: ../input/decoderbase.cpp ../input/decoderbase.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/decoderbase.o ../input/decoderbase.cpp

.obj/sndfiledecoder.o: ../input/sndfiledecoder.cpp ../input/sndfiledecoder.h \
		../input/decoderbase.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/sndfiledecoder.o ../input/sndfiledecoder.cpp

.obj/decmpadecoder.o: ../input/decmpadecoder.cpp ../input/decmpadecoder.h \
		../input/decoderbase.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/decmpadecoder.o ../input/decmpadecoder.cpp

####### Install

install: all  

uninstall:  

